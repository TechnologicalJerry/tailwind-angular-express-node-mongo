{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Tailwind Angular Express Node Mongo",
		"description": "Complete API collection for Express TypeScript backend with authentication, user management, and product management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Health Check",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check if the server is running"
					},
					"response": []
				}
			],
			"description": "Health check endpoints"
		},
		{
			"name": "API Info",
			"item": [
				{
					"name": "Get API Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api"
							]
						},
						"description": "Get API information and available endpoints"
					},
					"response": []
				}
			],
			"description": "API information endpoints"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Registration successful\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.expect(jsonData).to.have.property('user');",
									"    ",
									"    // Auto-set variables",
									"    pm.environment.set(\"auth_token\", jsonData.token);",
									"    pm.environment.set(\"user_id\", jsonData.user.id);",
									"    pm.environment.set(\"user_email\", jsonData.user.email);",
									"    pm.environment.set(\"user_name\", jsonData.user.userName);",
									"    ",
									"    console.log(\"✅ Registration successful - Token and User ID set\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"{{test_firstName}}\",\n  \"lastName\": \"{{test_lastName}}\",\n  \"userName\": \"{{test_userName}}\",\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\",\n  \"confirmPassword\": \"{{test_password}}\",\n  \"phone\": \"{{test_phone}}\",\n  \"gender\": \"{{test_gender}}\",\n  \"dob\": \"{{test_dob}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user with comprehensive user information"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login successful\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.expect(jsonData).to.have.property('user');",
									"    ",
									"    // Auto-set variables",
									"    pm.environment.set(\"auth_token\", jsonData.token);",
									"    pm.environment.set(\"user_id\", jsonData.user.id);",
									"    pm.environment.set(\"user_email\", jsonData.user.email);",
									"    pm.environment.set(\"user_name\", jsonData.user.userName);",
									"    ",
									"    console.log(\"✅ Login successful - Token and User ID set\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user_email}}\",\n  \"password\": \"{{test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with email and password"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Get current authenticated user information"
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout current user"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration, login, and logout"
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Get all users (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Get user by ID (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Doe Updated\",\n  \"phone\": \"+1987654321\",\n  \"gender\": \"male\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Update user information (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Delete user (requires authentication)"
					},
					"response": []
				}
			],
			"description": "User management endpoints (all require authentication)"
		},
		{
			"name": "Product Management",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products"
							]
						},
						"description": "Get all products (public endpoint)"
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								"{{product_id}}"
							]
						},
						"description": "Get product by ID (public endpoint)"
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Product created successfully\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('product');",
									"    ",
									"    // Auto-set product ID",
									"    pm.environment.set(\"product_id\", jsonData.product._id);",
									"    ",
									"    console.log(\"✅ Product created - Product ID set: \" + jsonData.product._id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{test_product_name}}\",\n  \"description\": \"{{test_product_description}}\",\n  \"price\": {{test_product_price}},\n  \"category\": \"{{test_product_category}}\",\n  \"stock\": {{test_product_stock}},\n  \"imageUrl\": \"{{test_product_image}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products"
							]
						},
						"description": "Create a new product (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"iPhone 15 Pro Max\",\n  \"description\": \"Updated description\",\n  \"price\": 1099.99,\n  \"stock\": 25\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								"{{product_id}}"
							]
						},
						"description": "Update product information (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								"{{product_id}}"
							]
						},
						"description": "Delete product (requires authentication)"
					},
					"response": []
				}
			],
			"description": "Product management endpoints"
		},
		{
			"name": "Error Testing",
			"item": [
				{
					"name": "Test 404 Error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/nonexistent",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"nonexistent"
							]
						},
						"description": "Test 404 error handling"
					},
					"response": []
				},
				{
					"name": "Test Invalid Registration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"John\",\n  \"email\": \"invalid-email\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Test validation errors"
					},
					"response": []
				},
				{
					"name": "Test Unauthorized Access",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Test unauthorized access (no token)"
					},
					"response": []
				}
			],
			"description": "Error testing endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5050",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_email",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_firstName",
			"value": "Test",
			"type": "string"
		},
		{
			"key": "test_lastName",
			"value": "User",
			"type": "string"
		},
		{
			"key": "test_userName",
			"value": "testuser123",
			"type": "string"
		},
		{
			"key": "test_email",
			"value": "test@example.com",
			"type": "string"
		},
		{
			"key": "test_password",
			"value": "TestPassword123!",
			"type": "string"
		},
		{
			"key": "test_phone",
			"value": "+1234567890",
			"type": "string"
		},
		{
			"key": "test_gender",
			"value": "male",
			"type": "string"
		},
		{
			"key": "test_dob",
			"value": "1990-01-15",
			"type": "string"
		},
		{
			"key": "test_product_name",
			"value": "iPhone 15 Pro",
			"type": "string"
		},
		{
			"key": "test_product_description",
			"value": "Latest iPhone with advanced camera system and A17 Pro chip",
			"type": "string"
		},
		{
			"key": "test_product_price",
			"value": "999.99",
			"type": "string"
		},
		{
			"key": "test_product_category",
			"value": "electronics",
			"type": "string"
		},
		{
			"key": "test_product_stock",
			"value": "50",
			"type": "string"
		},
		{
			"key": "test_product_image",
			"value": "https://example.com/iphone15pro.jpg",
			"type": "string"
		}
	]
}
